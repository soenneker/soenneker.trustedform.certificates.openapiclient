// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.TrustedForm.Certificates.OpenApiClient.Models
{
    /// <summary>
    /// The data points requested, if available.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class MobileInsightsResult_properties : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Number of seconds since the last user interaction with the certificate.</summary>
        public int? AgeSeconds { get; set; }
        /// <summary>An object containing properties that provide information about the consumer’s location at the time the certificate was created based on their IP address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_approx_ip_geo? ApproxIpGeo { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_approx_ip_geo ApproxIpGeo { get; set; }
#endif
        /// <summary>This field indicates the verified owner of the TrustedForm certificate.The value can be one of the following:- ``&quot;ActiveProspect Verified Account&quot;`` — the certificate has been confirmed to belong to an account verified by ActiveProspect, but the specific account name is not disclosed as the account is not a connected partner or has not granted permission to confirm ownership.- ``&quot;&lt;account name&gt;&quot;`` — the name of the verified account that owns the certificate and has granted permission to confirm ownership.To manage permissions, visit the [Connections](https://account.activeprospect.com/connections/invitations/new) page. You can invite a new partner to connect, or request the necessary permissions from an existing connection. Once granted, ownership information can be shared transparently.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConfirmedOwner { get; set; }
#nullable restore
#else
        public string ConfirmedOwner { get; set; }
#endif
        /// <summary>The UTC ISO8601 formatted date and time when TrustedForm Certify was loaded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The UTC ISO8601 formatted date and time when the certificate will expire.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpiresAt { get; set; }
#nullable restore
#else
        public string ExpiresAt { get; set; }
#endif
        /// <summary>The consumer&apos;s public IP address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Ip { get; set; }
#nullable restore
#else
        public string Ip { get; set; }
#endif
        /// <summary>A boolean indicating if the certificate is masked and does not show source information nor a session replay.</summary>
        public bool? IsMasked { get; set; }
        /// <summary>An object containing properties that provide information about the consumer&apos;s operating system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_os? Os { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_os Os { get; set; }
#endif
        /// <summary>The time in seconds between when TrustedForm Certify was loaded and when the most recent cert event was received.</summary>
        public double? SecondsOnPage { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties"/> and sets the default values.
        /// </summary>
        public MobileInsightsResult_properties()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "age_seconds", n => { AgeSeconds = n.GetIntValue(); } },
                { "approx_ip_geo", n => { ApproxIpGeo = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_approx_ip_geo>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_approx_ip_geo.CreateFromDiscriminatorValue); } },
                { "confirmed_owner", n => { ConfirmedOwner = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "expires_at", n => { ExpiresAt = n.GetStringValue(); } },
                { "ip", n => { Ip = n.GetStringValue(); } },
                { "is_masked", n => { IsMasked = n.GetBoolValue(); } },
                { "os", n => { Os = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_os>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_os.CreateFromDiscriminatorValue); } },
                { "seconds_on_page", n => { SecondsOnPage = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("age_seconds", AgeSeconds);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_approx_ip_geo>("approx_ip_geo", ApproxIpGeo);
            writer.WriteStringValue("confirmed_owner", ConfirmedOwner);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("expires_at", ExpiresAt);
            writer.WriteStringValue("ip", Ip);
            writer.WriteBoolValue("is_masked", IsMasked);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MobileInsightsResult_properties_os>("os", Os);
            writer.WriteDoubleValue("seconds_on_page", SecondsOnPage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
