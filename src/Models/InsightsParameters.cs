// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.TrustedForm.Certificates.OpenApiClient.Models
{
    /// <summary>
    ///     Request individual Insights data points (`properties`) to be returned    and terms for which to scan for in a certificate session replay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class InsightsParameters : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>        A list of the Insights data points you would like to be returned in        the response. Some `properties` are not        compatible with all certificate types and will return a null value.        Only contracted `properties` are        available to query. Your account will only be charged for properties        that are returned.        See InsightsResult for `form_input_method` values.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_properties?>? Properties { get; set; }
#nullable restore
#else
        public List<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_properties?> Properties { get; set; }
#endif
        /// <summary>An object containing the terms to use to perform a page scan which checks for their presence in the content captured by the certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_scans? Scans { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_scans Scans { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters"/> and sets the default values.
        /// </summary>
        public InsightsParameters()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "properties", n => { Properties = n.GetCollectionOfEnumValues<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_properties>()?.AsList(); } },
                { "scans", n => { Scans = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_scans>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_scans.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_properties>("properties", Properties);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsParameters_scans>("scans", Scans);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
