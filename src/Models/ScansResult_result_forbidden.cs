// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.TrustedForm.Certificates.OpenApiClient.Models
{
    /// <summary>
    /// An object containing the forbidden scans that were found and not found.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ScansResult_result_forbidden : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary> A list of forbidden scan terms that were found in the recorded content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found? Found { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found Found { get; set; }
#endif
        /// <summary>A list of forbidden scan terms that were not found in the recorded content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found? NotFound { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found NotFound { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden"/> and sets the default values.
        /// </summary>
        public ScansResult_result_forbidden()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "found", n => { Found = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found.CreateFromDiscriminatorValue); } },
                { "not_found", n => { NotFound = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found>("found", Found);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found>("not_found", NotFound);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ScansResult_result_forbidden_found : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? ScansResultResultForbiddenFoundString { get; set; }
#nullable restore
#else
            public string ScansResultResultForbiddenFoundString { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_found();
                if(parseNode.GetStringValue() is string scansResultResultForbiddenFoundStringValue)
                {
                    result.ScansResultResultForbiddenFoundString = scansResultResultForbiddenFoundStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(ScansResultResultForbiddenFoundString != null)
                {
                    writer.WriteStringValue(null, ScansResultResultForbiddenFoundString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ScansResult_result_forbidden_not_found : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? ScansResultResultForbiddenNotFoundString { get; set; }
#nullable restore
#else
            public string ScansResultResultForbiddenNotFoundString { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.ScansResult_result_forbidden.ScansResult_result_forbidden_not_found();
                if(parseNode.GetStringValue() is string scansResultResultForbiddenNotFoundStringValue)
                {
                    result.ScansResultResultForbiddenNotFoundString = scansResultResultForbiddenNotFoundStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(ScansResultResultForbiddenNotFoundString != null)
                {
                    writer.WriteStringValue(null, ScansResultResultForbiddenNotFoundString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
