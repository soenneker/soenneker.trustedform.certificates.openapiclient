// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.TrustedForm.Certificates.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class VerifyResult : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>  The legal name of the advertiser used to perform the 1:1 consent language check. This value can be passed in the request or set via the [verification criteria page](https://app.trustedform.com/verification_criteria) and will appear in the response if provided in either.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdvertiserName { get; set; }
#nullable restore
#else
        public string AdvertiserName { get; set; }
#endif
        /// <summary>A list of the consent languages detected within the certificate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_languages>? Languages { get; set; }
#nullable restore
#else
        public List<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_languages> Languages { get; set; }
#endif
        /// <summary>  The number indicating the minimum contrast ratio required between the consent language text and background. This value can be passed in the request or set via the [verification criteria page](https://app.trustedform.com/verification_criteria) and will appear in the response if provided in either.</summary>
        public double? MinContrastRatioRequired { get; set; }
        /// <summary>  The number indicating the minimum font size required for the consent language. This value can be passed in the request or set via the [verification criteria page](https://app.trustedform.com/verification_criteria) and will appear in the response if provided in either.</summary>
        public double? MinFontSizePxRequired { get; set; }
        /// <summary>  An array of strings that lists the opt-in types that are allowed. This value can be passed in the request or set via the [verification criteria page](https://app.trustedform.com/verification_criteria) and will appear in the response if provided through either method.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_opt_in_types_allowed?>? OptInTypesAllowed { get; set; }
#nullable restore
#else
        public List<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_opt_in_types_allowed?> OptInTypesAllowed { get; set; }
#endif
        /// <summary>An object containing properties that detail the result of the verify operation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_result? Result { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_result Result { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult"/> and sets the default values.
        /// </summary>
        public VerifyResult()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "advertiser_name", n => { AdvertiserName = n.GetStringValue(); } },
                { "languages", n => { Languages = n.GetCollectionOfObjectValues<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_languages>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_languages.CreateFromDiscriminatorValue)?.AsList(); } },
                { "min_contrast_ratio_required", n => { MinContrastRatioRequired = n.GetDoubleValue(); } },
                { "min_font_size_px_required", n => { MinFontSizePxRequired = n.GetDoubleValue(); } },
                { "opt_in_types_allowed", n => { OptInTypesAllowed = n.GetCollectionOfEnumValues<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_opt_in_types_allowed>()?.AsList(); } },
                { "result", n => { Result = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_result>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_result.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("advertiser_name", AdvertiserName);
            writer.WriteCollectionOfObjectValues<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_languages>("languages", Languages);
            writer.WriteDoubleValue("min_contrast_ratio_required", MinContrastRatioRequired);
            writer.WriteDoubleValue("min_font_size_px_required", MinFontSizePxRequired);
            writer.WriteCollectionOfEnumValues<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_opt_in_types_allowed>("opt_in_types_allowed", OptInTypesAllowed);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult_result>("result", Result);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
