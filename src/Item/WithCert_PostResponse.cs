// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Soenneker.TrustedForm.Certificates.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.TrustedForm.Certificates.OpenApiClient.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithCert_PostResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The insights property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsResult? Insights { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsResult Insights { get; set; }
#endif
        /// <summary>  The result of the `match_lead` operation. The `email` and `phone` parameters are echoed and the  `result` property reports the outcome of the operation. More information is [available in our KB](https://community.activeprospect.com/posts/4766190-trustedform-lead-matching).  If the operation result is not a `success`, TrustedForm was unable to confirm that the consumer information  collected on the cert matches the lead it came with. This is a strong signal that the lead should not be contacted.  The result of the `match_lead` operation does not impact the behavior of the `retain` operation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MatchLeadResult? MatchLead { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MatchLeadResult MatchLead { get; set; }
#endif
        /// <summary>  The overall outcome of executed operations. Indicates whether the call succeeded, failed, or resulted in an error.  Best practice is to use this property to determine if you should purchase a lead. A `failure` or `error`  indicate that the lead should not be contacted. The reason for failure or error is revealed in the `reason` property.</summary>
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse_outcome? Outcome { get; set; }
        /// <summary>Explanation for a `failure` or `error`, otherwise `null`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reason { get; set; }
#nullable restore
#else
        public string Reason { get; set; }
#endif
        /// <summary>The retain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.RetainResult? Retain { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.RetainResult Retain { get; set; }
#endif
        /// <summary>The verify property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult? Verify { get; set; }
#nullable restore
#else
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult Verify { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse"/> and sets the default values.
        /// </summary>
        public WithCert_PostResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "insights", n => { Insights = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsResult>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsResult.CreateFromDiscriminatorValue); } },
                { "match_lead", n => { MatchLead = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MatchLeadResult>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MatchLeadResult.CreateFromDiscriminatorValue); } },
                { "outcome", n => { Outcome = n.GetEnumValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse_outcome>(); } },
                { "reason", n => { Reason = n.GetStringValue(); } },
                { "retain", n => { Retain = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.RetainResult>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.RetainResult.CreateFromDiscriminatorValue); } },
                { "verify", n => { Verify = n.GetObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult>(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.InsightsResult>("insights", Insights);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MatchLeadResult>("match_lead", MatchLead);
            writer.WriteEnumValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse_outcome>("outcome", Outcome);
            writer.WriteStringValue("reason", Reason);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.RetainResult>("retain", Retain);
            writer.WriteObjectValue<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.VerifyResult>("verify", Verify);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
