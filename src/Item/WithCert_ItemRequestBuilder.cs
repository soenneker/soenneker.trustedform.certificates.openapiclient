// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.TrustedForm.Certificates.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.TrustedForm.Certificates.OpenApiClient.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \{cert_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithCert_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCert_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{cert_id}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCert_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{cert_id}", rawUrl)
        {
        }
        /// <summary>
        /// The TrustedForm Certificate API is able to perform multiple operations based on the parameters sent in the request.Each operation is demonstrated in the request body documentation. The overall outcome of the operations is revealedby the `outcome` property. Best practice is to base your purchase decision on this property.Separate documentation about the parameters and results of each operation is available in the Operationsreference. and can be used alone or in tandem with another operation. The `match_lead` operation is requiredwhen running the `retain` operation.
        /// Introduction of TrustedForm Certificate API v4.0 <see href="https://community.activeprospect.com/posts/5066720-introducing-trustedform-certificate-api-v4-0" />
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.BadRequest">When receiving a 400 status code</exception>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.Unauthorized">When receiving a 401 status code</exception>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.PaymentRequired">When receiving a 402 status code</exception>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.Forbidden">When receiving a 403 status code</exception>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.NotFound">When receiving a 404 status code</exception>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MethodNotAllowed">When receiving a 405 status code</exception>
        /// <exception cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.UnprocessableEntity">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse?> PostAsync(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse> PostAsync(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.BadRequest.CreateFromDiscriminatorValue },
                { "401", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.Unauthorized.CreateFromDiscriminatorValue },
                { "402", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.PaymentRequired.CreateFromDiscriminatorValue },
                { "403", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.Forbidden.CreateFromDiscriminatorValue },
                { "404", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.NotFound.CreateFromDiscriminatorValue },
                { "405", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.MethodNotAllowed.CreateFromDiscriminatorValue },
                { "422", global::Soenneker.TrustedForm.Certificates.OpenApiClient.Models.UnprocessableEntity.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse>(requestInfo, global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The TrustedForm Certificate API is able to perform multiple operations based on the parameters sent in the request.Each operation is demonstrated in the request body documentation. The overall outcome of the operations is revealedby the `outcome` property. Best practice is to base your purchase decision on this property.Separate documentation about the parameters and results of each operation is available in the Operationsreference. and can be used alone or in tandem with another operation. The `match_lead` operation is requiredwhen running the `retain` operation.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_ItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_ItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.TrustedForm.Certificates.OpenApiClient.Item.WithCert_ItemRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
